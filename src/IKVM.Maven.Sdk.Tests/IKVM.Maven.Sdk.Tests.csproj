<Project>
    <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

    <PropertyGroup>
        <TargetFrameworks>net7.0</TargetFrameworks>
        <NoWarn>CS1591</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <Compile Remove="Project\**\*" />
        <None Include="Project\**\*" CopyToOutputDirectory="PreserveNewest" />
        <Compile Remove="PackProject\**\*" />
        <None Include="PackProject\**\*" CopyToOutputDirectory="PreserveNewest" />
        <Compile Remove="PackageReferenceProject\**\*" />
        <None Include="PackageReferenceProject\**\*" CopyToOutputDirectory="PreserveNewest" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="FluentAssertions" Version="6.7.0" />
        <PackageReference Include="Buildalyzer" Version="4.1.4" />
        <PackageReference Include="Microsoft.CodeCoverage" Version="17.2.0" />
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.2.0" />
        <PackageReference Include="Moq" Version="4.18.1" />
        <PackageReference Include="MSTest.TestAdapter" Version="2.2.10" />
        <PackageReference Include="MSTest.TestFramework" Version="2.2.10" />
    </ItemGroup>

    <ItemGroup>
        <PackageProjectReference Include="..\IKVM.Maven.Sdk\IKVM.Maven.Sdk.csproj" />
    </ItemGroup>

    <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

    <!-- Generate a file the Tests can use to retrieve various MSBuild properties. -->
    <Target Name="GeneratePropertiesFile">
        <ItemGroup>
            <ProjectProperties Include="PackageVersion=$(PackageVersion)" />
        </ItemGroup>
        <WriteLinesToFile File="$(IntermediateOutputPath)$(ProjectName).properties" Lines="@(ProjectProperties)" Overwrite="true" />
        <ItemGroup>
            <ContentWithTargetPath Include="$(IntermediateOutputPath)$(ProjectName).properties">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
                <TargetPath>$(ProjectName).properties</TargetPath>
            </ContentWithTargetPath>
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <GetCopyToOutputDirectoryItemsDependsOn>
            GeneratePropertiesFile;
            $(GetCopyToOutputDirectoryItemsDependsOn);
        </GetCopyToOutputDirectoryItemsDependsOn>
    </PropertyGroup>

    <Target Name="AssignPackageProjectConfiguration" Condition=" '@(PackageProjectReference)' != '' " Inputs="@(PackageProjectReference)" Outputs="dummy">
        <PropertyGroup>
            <OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration Condition="'$(OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration)' == ''">true</OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration>
            <ShouldUnsetParentConfigurationAndPlatform Condition="'$(ShouldUnsetParentConfigurationAndPlatform)' == '' and ('$(BuildingInsideVisualStudio)' == 'true' or '$(BuildingSolutionFile)' == 'true')">true</ShouldUnsetParentConfigurationAndPlatform>
            <ShouldUnsetParentConfigurationAndPlatform Condition="'$(ShouldUnsetParentConfigurationAndPlatform)' == ''">false</ShouldUnsetParentConfigurationAndPlatform>
            <AddSyntheticProjectReferencesForSolutionDependencies Condition="'$(AddSyntheticProjectReferencesForSolutionDependencies)' == '' and '$(TargetFrameworkIdentifier)' == 'Silverlight'">false</AddSyntheticProjectReferencesForSolutionDependencies>
            <AddSyntheticProjectReferencesForSolutionDependencies Condition="'$(AddSyntheticProjectReferencesForSolutionDependencies)' == '' and '$(BuildingInsideVisualStudio)' != 'true'">true</AddSyntheticProjectReferencesForSolutionDependencies>
        </PropertyGroup>
        <AssignProjectConfiguration ProjectReferences="@(PackageProjectReference)" CurrentProject="$(MSBuildProjectFullPath)" CurrentProjectConfiguration="$(Configuration)" CurrentProjectPlatform="$(Platform)" DefaultToVcxPlatformMapping="$(DefaultToVcxPlatformMapping)" VcxToDefaultPlatformMapping="$(VcxToDefaultPlatformMapping)" OutputType="$(OutputType)" ResolveConfigurationPlatformUsingMappings="false" SolutionConfigurationContents="$(CurrentSolutionConfigurationContents)" AddSyntheticProjectReferencesForSolutionDependencies="$(AddSyntheticProjectReferencesForSolutionDependencies)" OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration="$(OnlyReferenceAndBuildProjectsEnabledInSolutionConfiguration)" ShouldUnsetParentConfigurationAndPlatform="$(ShouldUnsetParentConfigurationAndPlatform)">
            <Output TaskParameter="AssignedProjects" ItemName="_PackageProjectReferenceWithConfiguration" />
            <Output TaskParameter="UnassignedProjects" ItemName="_PackageProjectReferenceWithConfiguration" />
        </AssignProjectConfiguration>
    </Target>

    <Target Name="GetProjectReferencePackageOutputPath" DependsOnTargets="AssignPackageProjectConfiguration" Inputs="@(_PackageProjectReferenceWithConfiguration)" Outputs="dummy">
        <MSBuild Projects="@(_PackageProjectReferenceWithConfiguration)" Targets="_CleanPackageFiles;Pack;GetPackageOutputPath" BuildInParallel="$(BuildInParallel)" Properties="%(_PackageProjectReferenceWithConfiguration.SetConfiguration);%(_PackageProjectReferenceWithConfiguration.SetPlatform)" RemoveProperties="%(_PackageProjectReferenceWithConfiguration.GlobalPropertiesToRemove);TargetFramework" Condition=" '%(_PackageProjectReferenceWithConfiguration.Identity)' != '' ">
            <Output TaskParameter="TargetOutputs" ItemName="_ResolvedPackageOutputPath" />
        </MSBuild>
        <ItemGroup>
            <_ResolvePackageProjectReferenceOutputItems Include="%(_ResolvedPackageOutputPath.Identity)\**\*.nupkg" Condition=" '%(_ResolvedPackageOutputPath.Identity)' != '' " />
            <ContentWithTargetPath Include="@(_ResolvePackageProjectReferenceOutputItems)">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
                <TargetPath>nuget\%(Filename)%(Extension)</TargetPath>
            </ContentWithTargetPath>
        </ItemGroup>
    </Target>

    <PropertyGroup>
        <GetCopyToOutputDirectoryItemsDependsOn>
            GetProjectReferencePackageOutputPath;
            $(GetCopyToOutputDirectoryItemsDependsOn);
        </GetCopyToOutputDirectoryItemsDependsOn>
    </PropertyGroup>
</Project>
